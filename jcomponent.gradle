apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

apply from: rootProject.file('dependencies.gradle')
apply from: rootProject.file('extras.gradle')

sourceCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation slf4jApi()

    testImplementation junit()
    testImplementation mockito()
    testImplementation hamcrest()
}

test {
    useJUnitPlatform()

    testLogging {
        events "failed"
        exceptionFormat "full"
        showStackTraces true
    }
}

jar {
    archiveBaseName.set(project.name)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('sources')

    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('javadoc')

    from javadoc.destinationDir
}

build.finalizedBy sourcesJar, javadocJar

publishing {
    publications {
        mavenFlashlib(MavenPublication) {
            def projectName = project.name

            from components.java

            artifact sourcesJar
            artifact javadocJar

            artifactId = projectName

            pom {
                name = projectName
                description = "Robotics development framework (${projectName})"
                url = POM_URL

                licenses {
                    license {
                        name = POM_LICENSE_NAME
                        url = POM_LICENSE_URL
                    }
                }

                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_MAIL
                    }
                }

                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                    url = POM_URL
                }
            }
        }
    }

    repositories {
        maven {
            if (isReleaseBuild()) {
                name = 'NexusStaging'
                url = NEXUS_RELEASE_REPOSITORY_URL
            } else {
                name = 'NexusSnapshot'
                url = NEXUS_SNAPSHOT_REPOSITORY_URL
            }

            credentials {
                username getNexusUsername()
                password getNexusPassword()
            }
        }
    }
}

if (shouldSign()) {
    signing {
        sign publishing.publications.mavenFlashlib
    }
}
