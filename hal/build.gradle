subprojects {
    apply plugin: 'cpp'
	
	model{
		repositories {
			libs(PrebuiltLibraries) {
				jni {
					headers.srcDirs "${System.properties['java.home']}/../include",
						"${System.properties['java.home']}/../include/win32",
						"${System.properties['java.home']}/../include/darwin",
						"${System.properties['java.home']}/../include/linux"
				}
			}
		}
		components {
			flashlib_hal(NativeLibrarySpec) {
				sources {
					cpp {
						source {
							srcDirs = ["src", "../shared/src"]
							include "**/*.*"
						}
						exportedHeaders {
							srcDirs = ["include", "../shared/include"]
						}
						lib library: 'jni', linkage: 'api'
					}
				}
				binaries.all {
					cppCompiler.args "-std=c++11", "-fPIC", "-Wno-narrowing"
				}
			}
		}
	}
}

project(':hal:beagleboneblack'){
	buildDir = halOutputFolder + 'beagleboneblack/'
}
project(':hal:beagleboneblack_pru'){
	buildDir = halOutputFolder + 'beagleboneblack_pru/'

	task createPRUBuild{
		doLast{
		    exec {
		    	workingDir 'pru/'
		        commandLine 'make', 'all'
			}
			copy{
				from 'pru/data.bin'
				from 'pru/text.bin'
				into halOutputFolder + 'beagleboneblack_pru/pru/'
			}
		    exec {
		    	workingDir 'pru/'
		        commandLine 'make', 'clean'
			}
			println("PRU program built")
		}
	}
	build.finalizedBy(createPRUBuild)
}
