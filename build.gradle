buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.5.0"
    }
}

def flashlibModules = [
        project('flashutil'),
        project('flashvision'),
        project('flashcomm'),
        project('flashcore')
]

allprojects {
    group = GROUP
    version = VERSION

    apply from: rootProject.file('extras.gradle')
}

subprojects {
    buildDir = rootProject.file("build/${project.name}")

    repositories {
        mavenCentral()
    }
}

flashlibModules.each { subproject -> evaluationDependsOn(subproject.path) }

task flashlibSources(type: Jar, dependsOn: flashlibModules.classes) {
    archiveBaseName.set('flashlib')
    destinationDirectory.set(rootProject.buildDir)
    archiveClassifier.set('sources')

    from files(flashlibModules.collect {
        it.sourceSets.main.allSource
    })
}

task flashlibJavadoc(type: Jar, dependsOn: flashlibModules.javadoc) {
    archiveBaseName.set('flashlib')
    destinationDirectory.set(rootProject.buildDir)
    archiveClassifier.set('javadoc')

    from files(flashlibModules.collect {
        it.javadoc.destinationDir
    })
}

task flashlib(type: Jar, dependsOn: flashlibModules.assemble) {
    dependsOn flashlibSources
    dependsOn flashlibJavadoc

    archiveBaseName.set('flashlib')
    destinationDirectory.set(rootProject.buildDir)

    from files(flashlibModules.collect {
        it.sourceSets.main.output
    })
}

task flashlibAll(type: Jar, dependsOn: flashlib) {
    dependsOn flashlibSources
    dependsOn flashlibJavadoc

    archiveFileName.set('flashlib-all.jar')
    destinationDirectory.set(rootProject.buildDir)

    from files(flashlibModules.collect {
        it.sourceSets.main.output
    })
    from files(flashlibModules.collect {
        it.sourceSets.main.allSource
    })
    from files(flashlibModules.collect {
        it.javadoc.destinationDir
    })
}

apply from: rootProject.file('deploy.gradle')